#!/bin/zsh

# Module: test-flags
# Generated by lie CLI Framework from config

LIE_HOME="${LIE_HOME:-$HOME/.lie}"
source "$LIE_HOME/utils/common.sh"

MODULE_NAME="test-flags"
MODULE_VERSION="1.0.0"
MODULE_DESCRIPTION="Test module for flag parsing
Deploy the application
Target environment
Force deployment
Build the application
Build for production
Run tests"

# Source user commands
CLI_DIR="$(dirname "$0")"
source "$CLI_DIR/commands.sh"

show_help() {
    echo -e "${BLUE}$MODULE_NAME v$MODULE_VERSION${NC}"
    echo "Description: $MODULE_DESCRIPTION"
    echo ""
    echo "Usage: $MODULE_NAME <subcommand>"
    echo ""
    echo "Subcommands:"
    echo "  deploy   - Run deploy command"
    echo "  environment   - Run environment command"
    echo "  force   - Run force command"
    echo "  build   - Run build command"
    echo "  production   - Run production command"
    echo "  test   - Run test command"
    echo "  help    - Show this help message"
}

show_status() {
    echo -e "${BLUE}Status for $MODULE_NAME${NC}"
    echo "Module: $MODULE_NAME"
    echo "Version: $MODULE_VERSION"
    echo "Commands file: $CLI_DIR/commands.sh"
}

execute_subcommand() {
    local subcommand="$1"
    shift
    
    case $subcommand in
        help|--help|-h)
            help
            ;;
        status)
            show_status
            ;;
        deploy)
            # Execute the function with remaining arguments
            "$subcommand" "$@"
            ;;
        environment)
            # Execute the function with remaining arguments
            "$subcommand" "$@"
            ;;
        force)
            # Execute the function with remaining arguments
            "$subcommand" "$@"
            ;;
        build)
            # Execute the function with remaining arguments
            "$subcommand" "$@"
            ;;
        production)
            # Execute the function with remaining arguments
            "$subcommand" "$@"
            ;;
        test)
            # Execute the function with remaining arguments
            "$subcommand" "$@"
            ;;
        *)
            echo -e "${RED}Error: Unknown subcommand '$subcommand'${NC}"
            echo ""
            show_help
            exit 1
            ;;
    esac
}

main() {
    if [ $# -eq 0 ]; then
        show_help
        exit 0
    fi
    
    execute_subcommand "$@"
}

main "$@"
