#!/bin/zsh

# lie CLI Framework - Main Dispatcher
# Provides modular command infrastructure with subcommand support

set -e
setopt +o nomatch  # Prevent "no matches found" errors for globs

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Framework paths
LIE_HOME="$HOME/.lie"
MODULES_DIR="$LIE_HOME/modules"
UTILS_DIR="$LIE_HOME/utils"
CONFIG_FILE="$LIE_HOME/config/config.json"

# Load configuration
load_config() {
    if [ -f "$CONFIG_FILE" ]; then
        FRAMEWORK_VERSION=$(grep '"version"' "$CONFIG_FILE" | sed 's/.*"version": *"\([^"]*\)".*/\1/')
        LOG_LEVEL=$(grep '"log_level"' "$CONFIG_FILE" | sed 's/.*"log_level": *"\([^"]*\)".*/\1/')
    else
        FRAMEWORK_VERSION="1.0.0"
        LOG_LEVEL="info"
    fi
}

# Logging function
log() {
    local level="$1"
    shift
    local message="$*"
    
    case $level in
        debug)
            if [ "$LOG_LEVEL" = "debug" ]; then
                echo -e "${BLUE}[DEBUG]${NC} $message"
            fi
            ;;
        info)
            if [ "$LOG_LEVEL" = "debug" ] || [ "$LOG_LEVEL" = "info" ]; then
                echo -e "${GREEN}[INFO]${NC} $message"
            fi
            ;;
        warn)
            if [ "$LOG_LEVEL" != "error" ]; then
                echo -e "${YELLOW}[WARN]${NC} $message"
            fi
            ;;
        error)
            echo -e "${RED}[ERROR]${NC} $message" >&2
            ;;
    esac
}

# Show help
show_help() {
    echo -e "${BLUE}lie CLI Framework v${FRAMEWORK_VERSION}${NC}"
    echo ""
    echo "Usage: lie <module> [subcommand] [options]"
    echo ""
    echo "Framework Commands:"
    echo "  create <module>        Create a new module from template"
    echo "  add-command <module>   Add a subcommand to an existing module"
    echo "  list                   List all installed modules"
    echo "  help                   Show this help message"
    echo ""
    echo "Installed Modules:"
    
    # List installed modules
    if [ -d "$MODULES_DIR" ]; then
        for module in "$MODULES_DIR"/*; do
            if [ -d "$module" ]; then
                module_name=$(basename "$module")
                echo "  $module_name"
            fi
        done
    fi
    
    echo ""
    echo "Happy Hacking! ☠️"
}

# Main execution
main() {
    load_config
    
    # Show help if no arguments provided
    if [ $# -eq 0 ]; then
        show_help
        exit 0
    fi
    
    COMMAND="$1"
    shift
    
    case $COMMAND in
        help|--help|-h)
            show_help
            ;;
        create)
            source "$LIE_HOME/utils/module_creator.sh"
            create_module "$1"
            ;;
        add-command)
            source "$LIE_HOME/utils/subcommand_creator.sh"
            add_subcommand "$1"
            ;;
        list)
            source "$LIE_HOME/utils/module_lister.sh"
            list_modules
            ;;
        *)
            # Check if it's an installed module
            local module_script="$MODULES_DIR/${COMMAND}/${COMMAND}.sh"
            if [ -f "$module_script" ]; then
                log debug "Executing module: $module_script with args: $*"
                exec "$module_script" "$@"
            else
                echo -e "${RED}Unknown module: $COMMAND${NC}"
                echo "Run 'lie help' for available modules"
                exit 1
            fi
            ;;
    esac
}

# Run main function with all arguments
main "$@" 