#!/bin/zsh

# Subcommand Creator Utility for lie CLI Framework

add_subcommand() {
    local module_name="$1"
    if [ -z "$module_name" ]; then
        echo -e "${RED}Error: Please specify a module name${NC}"
        echo "Usage: lie add-command <module-name>"
        exit 1
    fi
    
    local cli_dir="${module_name}_cli"
    local commands_file="$cli_dir/commands.sh"
    local cli_internal_dir="$cli_dir/.cli"
    
    echo -e "${BLUE}Creating CLI package for module: $module_name${NC}"
    echo ""
    
    # Create CLI directory structure
    mkdir -p "$cli_internal_dir/subcommands"
    
    # Create commands.sh template
    cat > "$commands_file" <<EOF
#!/bin/zsh

# Commands for $module_name module
# Define your subcommand functions here
# Each function should be named after the subcommand

# Example subcommand function:
# start() {
#     local force=\${1:-false}
#     local verbose=\${2:-false}
#     
#     print_info "Starting $module_name..."
#     # Your logic here
#     print_success "Started successfully!"
# }

# TODO: Add your subcommand functions below
EOF
    
    chmod +x "$commands_file"
    
    # Create the main module script in .cli
    local module_script="$cli_internal_dir/$module_name.sh"
    cat > "$module_script" <<EOF
#!/bin/zsh

# Module: $module_name
# Generated by lie CLI Framework

LIE_HOME="\${LIE_HOME:-\$HOME/.lie}"
source "\$LIE_HOME/utils/common.sh"

MODULE_NAME="$module_name"
MODULE_VERSION="1.0.0"
MODULE_DESCRIPTION="CLI module for $module_name"

# Source user commands
CLI_DIR="\$(dirname "\$0")"
source "\$CLI_DIR/commands.sh"

show_help() {
    echo -e "\${BLUE}\$MODULE_NAME v\$MODULE_VERSION\${NC}"
    echo "Description: \$MODULE_DESCRIPTION"
    echo ""
    echo "Usage: lie \$MODULE_NAME <subcommand>"
    echo ""
    echo "Subcommands:"
    
    # Show built-in subcommands
    echo "  help     Show this help message"
    echo "  status   Show status information"
    
    # Show custom subcommands from commands.sh
    local commands_file="\$CLI_DIR/commands.sh"
    if [ -f "\$commands_file" ]; then
        # Extract function names from commands.sh
        grep "^[a-zA-Z_][a-zA-Z0-9_]*()" "\$commands_file" | sed 's/() {.*//' | while read -r func; do
            echo "  \$func"
        done
    fi
}

show_status() {
    echo -e "\${BLUE}Status for \$MODULE_NAME\${NC}"
    echo "Module: \$MODULE_NAME"
    echo "Version: \$MODULE_VERSION"
    echo "Commands file: \$CLI_DIR/commands.sh"
    echo ""
    echo "Available subcommands:"
    
    # Show built-in subcommands
    echo "  - help"
    echo "  - status"
    
    # Show custom subcommands
    local commands_file="\$CLI_DIR/commands.sh"
    if [ -f "\$commands_file" ]; then
        grep "^[a-zA-Z_][a-zA-Z0-9_]*()" "\$commands_file" | sed 's/() {.*//' | while read -r func; do
            echo "  - \$func"
        done
    fi
}

execute_subcommand() {
    local subcommand="\$1"
    shift
    
    case \$subcommand in
        help|--help|-h)
            show_help
            ;;
        status)
            show_status
            ;;
        *)
            # Check if function exists in commands.sh
            if type "\$subcommand" 2>/dev/null | grep -q "function"; then
                # Execute the function with remaining arguments
                "\$subcommand" "\$@"
            else
                echo -e "\${RED}Error: Unknown subcommand '\$subcommand'\${NC}"
                echo ""
                show_help
                exit 1
            fi
            ;;
    esac
}

main() {
    if [ \$# -eq 0 ]; then
        show_help
        exit 0
    fi
    
    execute_subcommand "\$@"
}

main "\$@"
EOF
    
    chmod +x "$module_script"
    
    # Create install script
    local install_script="$cli_dir/install.sh"
    cat > "$install_script" <<EOF
#!/bin/zsh

# Install script for $module_name CLI
LIE_HOME="\${LIE_HOME:-\$HOME/.lie}"
MODULES_DIR="\$LIE_HOME/modules"

echo "Installing $module_name CLI..."

# Create module directory
mkdir -p "\$MODULES_DIR/$module_name"

# Copy module script
cp ".cli/$module_name.sh" "\$MODULES_DIR/$module_name/"

# Copy commands.sh file
cp "commands.sh" "\$MODULES_DIR/$module_name/"

echo "✅ $module_name CLI installed successfully!"
echo "Run 'lie $module_name help' to see available commands"
EOF
    
    chmod +x "$install_script"
    
    echo -e "${GREEN}✅ Created CLI package: $cli_dir${NC}"
    echo ""
    echo -e "${BLUE}Structure created:${NC}"
    echo "  $cli_dir/"
    echo "  ├── commands.sh     (edit this to add your commands)"
    echo "  ├── install.sh      (run this to install)"
    echo "  └── .cli/           (framework files - don't touch)"
    echo ""
    echo -e "${BLUE}Next steps:${NC}"
    echo "  1. Edit $cli_dir/commands.sh to add your subcommand functions"
    echo "  2. Run ./$cli_dir/install.sh to install the module"
    echo "  3. Test with: lie $module_name help"
    echo ""
    echo -e "${YELLOW}Example commands.sh content:${NC}"
    echo "  start() {"
    echo "    local force=\${1:-false}"
    echo "    print_info \"Starting $module_name...\""
    echo "    # Your logic here"
    echo "    print_success \"Started successfully!\""
    echo "  }"
} 